Common Data Sources
========================================================
transition: none
width: 1024
height: 800
css: custom.css


Jay Skovlin, Dylan Beaudette, Stephen Roecker

<br><br><br><br><br><br><br>
<span style="color: white; font-size:65%;">This document is based on:</span>
<ul style="color: white; font-size:65%;">
<li> `aqp` (`r utils::packageDescription("aqp", field="Version")`)</li>
<li> `soilDB` (`r utils::packageDescription("soilDB", field="Version")`)</li>
<li> `sharpshootR` (`r utils::packageDescription("sharpshootR", field="Version")`)</li>
</ul>





```{r setup, echo=FALSE, results='hide', message=FALSE, warning=FALSE}
library(knitr, quietly = TRUE)
opts_chunk$set(message=FALSE, warning=FALSE, dpi=120, fig.align='center', retina=2, dev='png', dev.args=list(pointsize=10), tidy=TRUE, tidy.opts=list(width.cutoff=100), cache=TRUE)
```

```{r tidy=FALSE, echo=FALSE}
# load libraries
library(aqp)
library(soilDB)
library(sharpshootR)
library(lattice)
library(plyr)
library(Hmisc)
library(diagram)

# set options 
options(width=100, stringsAsFactors=FALSE)
```



Chapter 2: Common Data Sources
========================================================

<br>

**You need data before you can analyze it**

- loading data from various sources
- visualizing pedon / component data via "sketches"
- filtering pedon / component data via pattern matching
- exporting pedon / component data to text files or GIS data files


**Most of our data aren't in the form of CSV files**
- R packages to assist with loading soil survey data
- R packages for modeling the complexities of soil data
- R packages for routine analysis of pedon / component / ESC objects


<br><hr>
[Chapter 2 reference material](http://ncss-tech.github.io/stats_for_soil_survey/chapters/2_data/2a_tabular_data.html)




Why do all of this?  
========================================================

```{r echo=FALSE, results='hide', fig.height=6.5, fig.width=9, dpi=120}
library(ggplot2)
# assemble data on number of pedon by decade
#Pedons <- c(577, 6152, 9517, 19058, 42587, 112182, 231609, 184913)
#Year <- c("<1950s", "1950s", "1960s", "1970s", "1980s", "1990s", "2000s", "2010s")
Year <- as.numeric(c("1940", "1941", "1942", 
"1943", "1944", "1945", "1946", "1947", "1948", "1949", "1950", 
"1951", "1952", "1953", "1954", "1955", "1956", "1957", "1958", 
"1959", "1960", "1961", "1962", "1963", "1964", "1965", "1966", 
"1967", "1968", "1969", "1970", "1971", "1972", "1973", "1974", 
"1975", "1976", "1977", "1978", "1979", "1980", "1981", "1982", 
"1983", "1984", "1985", "1986", "1987", "1988", "1989", "1990", 
"1991", "1992", "1993", "1994", "1995", "1996", "1997", "1998", 
"1999", "2000", "2001", "2002", "2003", "2004", "2005", "2006", 
"2007", "2008", "2009", "2010", "2011", "2012", "2013", "2014", 
"2015", "2016", "2017"))
Pedons <- c(21, 2, 18, 26, 54, 48, 2, 23, 39, 71, 96, 116, 80, 
448, 692, 906, 992, 1107, 1168, 1367, 1249, 1461, 1384, 957, 
1176, 1107, 1101, 1011, 1076, 1362, 1866, 1586, 1646, 1444, 1953, 
2322, 2773, 3089, 3525, 3691, 3409, 3449, 3552, 3471, 4402, 4881, 
3691, 5124, 5334, 9658, 11554, 8485, 10120, 11694, 11038, 10869, 
12618, 12747, 12392, 13855, 14117, 18200, 15991, 15096, 23997, 
20265, 25705, 33700, 37313, 37368, 42288, 59900, 35772, 19062, 
26009, 12776, 11497, 11168)
Cummulative_Pedons <- c(310, 312, 330, 356, 
410, 458, 460, 483, 522, 593, 689, 805, 885, 1333, 2025, 2931, 
3923, 5030, 6198, 7565, 8814, 10275, 11659, 12616, 13792, 14899, 
16000, 17011, 18087, 19449, 21315, 22901, 24547, 25991, 27944, 
30266, 33039, 36128, 39653, 43344, 46753, 50202, 53754, 57225, 
61627, 66508, 70199, 75323, 80657, 90315, 101869, 110354, 120474, 
132168, 143206, 154075, 166693, 179440, 191832, 205687, 219804, 
238004, 253995, 269091, 293088, 313353, 339058, 372758, 410071, 
447439, 489727, 549627, 585399, 604461, 630470, 643246, 654743, 
665911)
 
# cat("# pedons = ", formatC(sum(Pedons), big.mark = ",", format = "fg"), "\n", "# lab pedons = ~64,000", sep = "")

# plot number of pedons in NASIS 
ggplot(data.frame(Pedons, Year), aes(x=Year, y=Pedons)) + geom_bar(stat="identity") + scale_y_continuous(name="Pedons", labels = scales::comma)
``` 

That is a lot of (perhaps underutilized) data!
========================================================
```{r pedons_a1, echo=FALSE, results='hide',fig.height=6.5, fig.width=9, dpi=120}
# plot the cummulative number of pedons in NASIS 
ggplot(data.frame(Cummulative_Pedons, Year), aes(x=Year, y=Cummulative_Pedons)) + geom_bar(stat="identity") + scale_y_continuous(name="Cummulative Pedons", labels = scales::comma)
``` 

Importance of Pedon Data
========================================================

- We've got a lot of data to work with and likely much more to bring online
- Archiving quality observations of soils made in the past, present, and future is difficult work
and we will need many different tools to help us tackle simple to complex analysis tasks
- QC of pedon data is worth spending some time on!

Common Issues with Pedon Data
========================================================
- Digging and making observations of soil is difficult!
- Errors in location data
- Our confidence in the observations often weakens with the depth of material described.
- How might we address this?
  + Use a cutoff depth, for example 100 cm, can be used to truncate observations to a zone of greater confidence.
  + Show the relative confidence of the data with depth.



Suite of R packages specific to Soil Survey work
========================================================

![alt text](static-figures/pinn-transect.png)

- soil data are complex, inherently visual
- reproducibility is increasingly important
- focus on the interesting questions, not boilerplate
- a common vocabulary for soil data analysis would be nice


aqp: Algorithms for Quantitative Pedology
========================================================
class: smaller

![alt text](static-figures/sketches.png)

- **special data structures:** avoids annoying book-keeping code
- **visualization:** soil profile sketches, transect diagrams, Munsell &#8594;&nbsp; RGB
- **re-sampling:** regular depth-slicing or EA spline (coming soon)
- **aggregation:** summary by depth-slice or arbitrary "slabs"
- **classification:** pair-wise dissimilarity of profiles
- **utility functions:** soil depth, missing data eval., simulation, ...

SoilProfileCollection Objects
========================================================

```{r SPC-1, echo=FALSE}
# sample dataset, extracted from NASIS
library(soilDB)
data(loafercreek)
str(loafercreek, 2)
```

```{r SPC-2, fig.width=10, fig.height=4, echo=FALSE}
par(mar=c(0,0,0,0))
plot(loafercreek[1:10, ], name='hzname', print.id=FALSE, cex.names=0.8, axis.line.offset=-4, max.depth=150)
```



aqp: Algorithms for Quantitative Pedology
========================================================
class: smaller

![](static-figures/aqp-demo.png)


soilDB: Soil Database Interface
========================================================

![](static-figures/soilDB_figure.png)



sharpshootR: Prototypes / Specialized Stuff
========================================================
class:smaller
![](static-figures/sharpshootR-demo.png)



soilReports: Summarize / Compare Map Unit Concepts
========================================================
class: small

![](static-figures/mu-summary-bwplot-1.png)






Interlude: Applied Examples / Pretty Pictures
========================================================

<br><br>

- [AQP project homepage](http://ncss-tech.github.io/AQP/)

- [2017 presentation on USDA-NCSS data and AQP suite of packages](http://ncss-tech.github.io/AQP/presentations/2017-CZO-UCR-data-sources-aqp/presentation.html)

- [soilReports setup, documentation, and examples](https://github.com/ncss-tech/soilReports/)

- [PDF poster with an aqp, soilDB, and sharpshootR montage](https://github.com/dylanbeaudette/2017Pedometrics/raw/master/AQP-poster/2017-AQP-poster.pdf)

<br>

- [aqp package reference](http://ncss-tech.github.io/aqp/docs/reference/index.html)
- [soilDB package reference](http://ncss-tech.github.io/soilDB/docs/reference/index.html)
- [sharpshootR package reference](http://ncss-tech.github.io/sharpshootR/docs/reference/index.html)


Getting Data with soilDB "fetch" Functions
========================================================

- **fetchNASIS(from='pedons')**
    - Gets [NASIS pedon/horizon data from a local NASIS database](http://ncss-tech.github.io/AQP/soilDB/fetchNASIS-mini-tutorial.html).
    
    
- **fetchNASIS(from='components')**
    - Gets [NASIS map unit and component daa from a local NASIS database](http://ncss-tech.github.io/AQP/soilDB/NASIS-component-data.html).
    

- **fetchNASISLabData()**
    - Gets KSSL laboratory pedon/horizon layer data from a local NASIS database.


Convenient 'fetch' Functions in the SoilDB Package
========================================================


- **fetchKSSL()**
    - Gets KSSL data from the SoilWeb system via BBOX, MLRA, or series name query.
        + [KSSL Data Demo](http://ncss-tech.github.io/AQP/soilDB/KSSL-demo.html)
        + [Water Retention Curve Development from KSSL Data](http://ncss-tech.github.io/AQP/soilDB/fetchKSSL-VG-demo.html)
- **fetchRaCA()**
    - Gets Rapid Carbon Assessment (RaCA) data by State, geographic bounding-box, RaCA site ID, or series query from the SoilWeb system.
        + [RaCA Data Demo](http://ncss-tech.github.io/AQP/soilDB/RaCA-demo.html)  
        
 
Fetch other soil data sources
========================================================       
- **SDA_query()**
    - Submits queries to the Soil Data Access system.
        + [Soil Data Access Tutorial](http://ncss-tech.github.io/AQP/soilDB/SDA-tutorial.html)
        + [SDA Queries for Spatial Data](http://ncss-tech.github.io/AQP/soilDB/SDA-tutorial-2.html)
        
- **fetchOSD()**
    - [Fetches a limited subset of horizon- and site-level attributes for named soil series from the SoilWeb system](http://ncss-tech.github.io/AQP/sharpshootR/OSD-dendrogram.html).
    
    
- **fetchPedonPC()**
    - Fetches commonly used site and horizon data from a PedonPC v.5 database.


Fetch soil climate-related sources
======================================================== 

- **fetchSCAN()**
    - Queries soil and climate data from USDA-NRCS SCAN Stations.
      + [A Unified Interface to SCAN/SNOTEL Data](http://ncss-tech.github.io/AQP/soilDB/fetchSCAN-demo.html)
      
- **fetchHenry()**
    - Downloads data from the Henry Mount Soil Climate Database.
        + [Henry Mount Soil Climate Database Tutorial](http://ncss-tech.github.io/AQP/soilDB/Henry-demo.html)


fetchNASIS() - How does it work and what does it do?
========================================================
- Extracts data from the local NASIS database via Structured Query Language (SQL). The selected set or entire local database can be queried.
- Runs basic data checks as the data are loaded.
- data are assembled into a custom site-level and horizon-level data structure object within R called a `SoilProfileCollection`.
- The [`SoilProfileCollection`](http://ncss-tech.github.io/AQP/aqp/aqp-intro.html) class simplifies the process of working with collections of data associated with soil profiles, e.g., site-level data, horizon-level data, spatial data, diagnostic horizon data, metadata, etc. 



Limitations
========================================================
- `fetchNASIS()` is not comprehensive!
- The SPC does not contain all of the data for every table related to site/pedon data in NASIS.
- Queries the most commonly used pedon and horizon data.  
- The nested complexity of the NASIS data structure is simplified and flattened in the resulting SPC object.  
    + Higher level functions like `fetchNASIS()` bundle a series of lower level functions that get specific parts of the data structure. 

- Data that is not automatically brought into the SPC can often be loaded using the 'get_extended_data from_NASIS_db' function and then joined back to the SPC data.


Data Checks Run by fetchNASIS()
========================================================

- **Inconsistent horizon boundaries**. Pedons with inconsistent horizon boundaries are not loaded.  
    + the commonly occurs when a bottom depth of a horizon does not match the next upper depth of the horizon below it.

```{r example_a, echo=FALSE, results='show', warning=FALSE}
top <- c(0,38,56,121,135)
bot <- c(30,56,121,135,'')
hzname <- c('A', 'Bt1', 'Bt2', 'Bk', 'R')
d <- data.frame(hzname, top, bot)
d
```
Note the issue above. The bottom depth of the A horizon and the upper depth of the Bt1 horizon should be the same: either 30 or 38 cm.

========================================================

- **Missing lower horizon depths.** Offending horizons are fixed by replacing the missing bottom depth with the top depth plus 2 cm. In the case of the profile shown above, a bottom depth of 137 cm would be inserted where the depth is missing.

```{r example_a1, echo=FALSE, results='show', warning=FALSE}
top <- c(0,38,56,121,135)
bot <- c(30,56,121,135,137)
hzname <- c('A', 'Bt1', 'Bt2', 'Bk', 'R')
d <- data.frame(hzname, top, bot)
d
```

- **Presence of multiple map datums**. Results reported to the user and the data are not modified.

- **Sites missing pedon records**. Data without corresponding horizons are not loaded.


Flattening of NASIS Objects into a SoilProfileCollection
========================================================

```{r structure_diagram_a, echo=FALSE, results='hide', fig.height=7, fig.width=9, dpi=120}
library(diagram, quietly=TRUE)
# reset figure margins
par(mar = c(1, 1, 1, 1))

# simple diagram of the pedon data structure
names <- c("Site", "Siteobs", "Pedon", "Horizon")
M <- matrix(nrow = 4, ncol = 4, byrow = TRUE, data = 0)
M[4, 3] <- M[3, 2] <- M[2, 1] <- ""
pos <- cbind (c(1, 1, 1, 1))
plotmat(M, pos = pos, name = names, lwd = 1, box.lwd = 2, cex.txt = 0.8, box.size = 0.1, box.type = "square", box.prop = 0.4, mx=-0.2)

# parallel simplified SPC structure
names <- c("Site-level", "Horizon-level")
M <- matrix(nrow = 2, ncol = 2, byrow = TRUE, data = 0)
 M[2, 1] <- ""
#pos <- cbind (c(2, 2))
plotmat(M, pos = c(1, 1), name = names, lwd = 1, box.lwd = 2, cex.txt = 0.8, box.size = 0.14, box.type = "square", box.prop = 0.75, mx=0.3, my=-0.1, add=TRUE)

# add arrows to the diagram
arrows(0.42, 0.1, x1=0.65, y1=0.1, length = 0.25, code=2, lwd=2, angle = 15)
arrows(0.42, 0.35, x1=0.65, y1=0.54, length = 0.25, code=2, lwd=2, angle = 15)
arrows(0.42, 0.61, x1=0.65, y1=0.61, length = 0.25, code=2, lwd=2, angle = 15)
arrows(0.42, 0.87, x1=0.65, y1=0.68, length = 0.25, code=2, lwd=2, angle = 15)
```







<!-- 
linking to sections of and Rmd / HTML:
# linking to section names, see last comment
https://stackoverflow.com/questions/33913780/internal-links-in-rmarkdown-dont-work
# hard-coded links, LATEX style
https://github.com/STAT545-UBC/Discussion/issues/138
-->

Your Objectives...for this afternoon!
========================================================

- [Learn how to inspect objects and understand data types in R types](http://ncss-tech.github.io/stats_for_soil_survey/chapters/2_data/2a_appendix_data_types.html#data-types-and-classes)
- [Use the soilDB package to load NASIS pedon data into R (section 4.3.1.4)](http://ncss-tech.github.io/stats_for_soil_survey/chapters/2_data/2a_tabular_data.html#spc-object-your-turn)
- [Determine if your data passes the checks run by `fetchNASIS()` (section 4.2.1)](http://ncss-tech.github.io/stats_for_soil_survey/chapters/2_data/2a_tabular_data.html#fetchNASIS-pedon-data-checks)
- [Identify pedon data with potential errors (section 5.1.4)](http://ncss-tech.github.io/stats_for_soil_survey/chapters/2_data/2a_tabular_data.html#fetchNASIS-data-checks-your-turn) 
- [Understand the structure of data stored in a `SoilProfileCollection` (section 4.3)](http://ncss-tech.github.io/stats_for_soil_survey/chapters/2_data/2a_tabular_data.html#spc-object-structure)
- [Plot your pedon locations (section 4.4)](http://ncss-tech.github.io/stats_for_soil_survey/chapters/2_data/2a_tabular_data.html#pedon-locations)
- [Review additional data that is accessible via extended data functions (section 5.3)](http://ncss-tech.github.io/stats_for_soil_survey/chapters/2_data/2a_tabular_data.html#nasis-pedon-extended-data)
- Use the examples in the chapter material to develop a plot or figure from your data


Your Objectives...for tomorrow!
========================================================
- [Test out ways to filter and subset SPC data in R](http://ncss-tech.github.io/stats_for_soil_survey/chapters/2_data/2a_tabular_data.html#NASIS-spc-object-examples)
- [Learn how functions can be used to bundle operations](http://ncss-tech.github.io/stats_for_soil_survey/chapters/2_data/2a_tabular_data.html#writing-functions)
- Try the [`SoilProfileCollection` Object Tutorial](http://ncss-tech.github.io/AQP/aqp/aqp-intro.html)
- Try plotting [groups of related pedon data](http://ncss-tech.github.io/AQP/aqp/merged-legend-plot.html)
- Try more examples with your own data

